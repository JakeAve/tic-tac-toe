@import url("./toggle.css");

:root {
  --color-bg: #1e1e1e;
  --color-bg-hover: #2a2a2a;
  --color-1: #e9e9e9;
  --boder-1: 2px solid var(--color-1);
  --red: rgb(254, 0, 0);
  --blue: rgb(0, 166, 255);
}

* {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  color: var(--color-1);
}

body {
  background-color: var(--color-bg);
}

main,
section {
  margin: 0 auto;
  max-width: 80vh;
}

main {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: minmax(auto, 80vh) 1fr;
}

button {
  cursor: pointer;
}

.tic-tac-toe-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

.tic-tac-toe-btn {
  border: 0;
  background-color: transparent;
  font-size: 4rem;
  color: var(--color-1);
}

.tic-tac-toe-btn:not([letter="x"]):not([letter="o"]):hover {
  background-color: var(--color-bg-hover);
}

.tic-tac-toe-btn[letter="x"],
.tic-tac-toe-btn[letter="o"] {
  cursor: not-allowed;
  animation: shadow-pulse 2s infinite ease-in-out, text-jump 0.5s ease-in-out;
}

.tic-tac-toe-btn[letter="x"] {
  --shadow-color: var(--red);
}

.tic-tac-toe-btn[letter="o"] {
  --shadow-color: var(--blue);
}

@keyframes shadow-pulse {
  0% {
    text-shadow: 0px 0px 20px var(--shadow-color);
  }
  50% {
    text-shadow: 0px 0px 40px var(--shadow-color);
  }
  100% {
    text-shadow: 0px 0px 20px var(--shadow-color);
  }
}

@keyframes text-jump {
  0% {
    font-size: 0rem;
  }
  30% {
    font-size: 5rem;
  }
  100% {
    font-size: 4rem;
  }
}

.tic-tac-toe-btn:nth-child(2),
.tic-tac-toe-btn:nth-child(8) {
  border-left: var(--boder-1);
  border-right: var(--boder-1);
}
.tic-tac-toe-btn:nth-child(4),
.tic-tac-toe-btn:nth-child(6) {
  border-top: var(--boder-1);
  border-bottom: var(--boder-1);
}

.tic-tac-toe-btn:nth-child(5) {
  border: var(--boder-1);
}

.btn {
  border: 2px solid var(--color-1);
  color: var(--color-1);
  background-color: var(--color-bg);
  padding: 1rem 2rem;
  cursor: pointer;
}

.reset-container {
  display: grid;
  gap: 1rem;
  justify-content: space-around;
  align-items: center;
  margin: 2rem 0;
}

.game-settings-form {
  display: grid;
  grid-template-columns: auto;
  justify-content: center;
  gap: 2rem;
}

.switch-and-label {
  display: grid;
  grid-template-columns: auto auto;
  justify-content: space-between;
  justify-items: center;
  align-items: center;
  gap: 1rem;
}

.form-btns {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-content: space-around;
  gap: 1rem;
}

.ai-on-toggle.toggle-wrapper.checked {
  --bg-1: var(--red);
  --bg-2: var(--blue);
}

.ai-on-toggle .toggle-checkbox:checked + .toggle-circle {
  box-shadow: 0 0 calc(var(--toggle-width) / 10) var(--color-fore-1);
  border-color: var(--background-color);
}

.toggle-wrapper.disabled {
  cursor: not-allowed;
  --bg-1: var(--color-bg);
  --bg-2: var(--color-bg);
}

.toggle-wrapper.disabled .toggle-circle {
  background-color: var(--color-bg);
  border-color: var(--color-bg) !important;
  box-shadow: 0 0 0 var(--color-bg) !important;
}

@keyframes color-shift-border {
  0% {
    border-color: var(--red);
    box-shadow: 0 0 calc(var(--toggle-width) / 10) var(--red);
  }
  100% {
    border-color: var(--blue);
    box-shadow: 0 0 calc(var(--toggle-width) / 10) var(--blue);
  }
}
@keyframes color-shift-background {
  0% {
    background-color: var(--bg-1);
  }
  100% {
    background-color: var(--bg-2);
  }
}

.ai-letter-toggle .toggle-span {
  color: var(--color-bg);
}

.dialog {
  position: fixed;
  margin: 0;
  top: 50%;
  left: 50%;
  bottom: unset;
  max-width: 80vw;
  min-width: 25vw;
  max-height: 80vh;
  min-height: 25vh;
  transform: translate(-50%, -50%);
  background-color: var(--color-bg);
  justify-content: center;
}

.dialog[open] {
  display: grid;
  grid-template-columns: 1fr;
}

.dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
}

.message-dialog {
  animation-name: bounce-6;
  animation-timing-function: ease;
  animation-duration: 1s;
}

.message-dialog p {
  font-size: 1.2rem;
  text-align: center;
}

@keyframes bounce-6 {
  0% {
    transform: scale(1, 1) translate(-50%, -50%);
  }
  10% {
    transform: scale(1.1, 0.9) translate(-50%, -50%);
  }
  30% {
    transform: scale(0.9, 1.1) translate(-50%, calc(-50% - 100px));
  }
  50% {
    transform: scale(1.05, 0.95) translate(-50%, -50%);
  }
  57% {
    transform: scale(1, 1) translate(-50%, calc(-50% - 7px));
  }
  64% {
    transform: scale(1, 1) translate(-50%, -50%);
  }
  100% {
    transform: scale(1, 1) translate(-50%, -50%);
  }
}

@media screen and (min-width: 350px) {
  .reset-container {
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
}

@media screen and (min-width: 600px) {
}
